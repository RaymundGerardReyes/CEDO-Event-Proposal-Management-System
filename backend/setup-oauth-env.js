#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

console.log('\n🔧 CEDO Google OAuth Setup Assistant');
console.log('=====================================\n');

console.log('This script will help you create a .env file with the required OAuth configuration.');
console.log('You can press Enter to use default values for optional fields.\n');

const envPath = path.join(__dirname, '.env');

// Check if .env already exists
if (fs.existsSync(envPath)) {
    console.log('⚠️  A .env file already exists. This will overwrite it.');
    rl.question('Do you want to continue? (y/N): ', (answer) => {
        if (answer.toLowerCase() !== 'y' && answer.toLowerCase() !== 'yes') {
            console.log('Setup cancelled.');
            rl.close();
            return;
        }
        startSetup();
    });
} else {
    startSetup();
}

function startSetup() {
    console.log('\n📋 Please provide the following information:');
    console.log('(You can get Google OAuth credentials from: https://console.cloud.google.com/)\n');

    const config = {};

    askQuestion('Google Client ID: ', (clientId) => {
        if (!clientId) {
            console.log('❌ Google Client ID is required!');
            rl.close();
            return;
        }
        config.GOOGLE_CLIENT_ID = clientId;

        askQuestion('Google Client Secret: ', (clientSecret) => {
            if (!clientSecret) {
                console.log('❌ Google Client Secret is required!');
                rl.close();
                return;
            }
            config.GOOGLE_CLIENT_SECRET = clientSecret;

            askQuestion('Backend URL [http://localhost:5000]: ', (baseUrl) => {
                config.BASE_URL = baseUrl || 'http://localhost:5000';

                askQuestion('Frontend URL [http://localhost:3000]: ', (frontendUrl) => {
                    config.FRONTEND_URL = frontendUrl || 'http://localhost:3000';

                    askQuestion('Database Host [127.0.0.1]: ', (dbHost) => {
                        config.DB_HOST = dbHost || '127.0.0.1';

                        askQuestion('Database Name [cedo_auth]: ', (dbName) => {
                            config.DB_NAME = dbName || 'cedo_auth';

                            askQuestion('Database User [root]: ', (dbUser) => {
                                config.DB_USER = dbUser || 'root';

                                askQuestion('Database Password (leave empty if none): ', (dbPassword) => {
                                    config.DB_PASSWORD = dbPassword || '';

                                    createEnvFile(config);
                                });
                            });
                        });
                    });
                });
            });
        });
    });
}

function askQuestion(question, callback) {
    rl.question(question, callback);
}

function createEnvFile(config) {
    const envContent = `# OAuth Environment Configuration
# Generated by setup-oauth-env.js

# Server Configuration
NODE_ENV=development
PORT=5000
BASE_URL=${config.BASE_URL}
FRONTEND_URL=${config.FRONTEND_URL}

# Database Configuration
DB_HOST=${config.DB_HOST}
DB_PORT=3306
DB_NAME=${config.DB_NAME}
DB_USER=${config.DB_USER}
DB_PASSWORD=${config.DB_PASSWORD}

# JWT Configuration
JWT_SECRET_DEV=cedo-jwt-secret-dev-${Date.now()}

# Google OAuth Configuration
GOOGLE_CLIENT_ID=${config.GOOGLE_CLIENT_ID}
GOOGLE_CLIENT_SECRET=${config.GOOGLE_CLIENT_SECRET}
GOOGLE_CLIENT_ID_BACKEND=${config.GOOGLE_CLIENT_ID}

# Cookie and Session Security
COOKIE_SECRET=cedo-cookie-secret-${Date.now()}

# Security Configuration
REQUIRE_GOOGLE_EMAIL_VERIFIED=true

# reCAPTCHA Configuration (optional)
RECAPTCHA_SECRET_KEY=your-recaptcha-secret-key
`;

    try {
        fs.writeFileSync(envPath, envContent);
        console.log('\n✅ .env file created successfully!');
        console.log(`📁 Location: ${envPath}`);
        console.log('\n🚀 You can now run: npm run dev');
        console.log('\n📚 Next steps:');
        console.log('1. Make sure your Google OAuth redirect URI is set to:');
        console.log(`   ${config.BASE_URL}/auth/google/callback`);
        console.log('2. Make sure your JavaScript origins include:');
        console.log(`   ${config.BASE_URL}`);
        console.log(`   ${config.FRONTEND_URL}`);
        console.log('3. Configure these in Google Cloud Console');
        console.log('4. Start your server with: npm run dev');
    } catch (error) {
        console.error('❌ Error creating .env file:', error.message);
    }

    rl.close();
}

rl.on('close', () => {
    process.exit(0);
}); 