services:
  mysql:
    image: mysql:8.0
    container_name: mysql_dev_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_SECRET} # Set the root password
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME} # Optional: create a database
    ports:
      - "3307:3306" # Ensure this port is not in use
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_dev_service
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${MYSQL_DATABASE_NAME}
      - DB_USER=${MYSQL_USER_NAME}
      - DB_PASSWORD=${MYSQL_USER_PASSWORD}
      - API_SECRET_DEV=${API_SECRET_DEV}
      - JWT_SECRET_DEV=${JWT_SECRET_DEV}
      - PORT=5000
      - FRONTEND_URL=${FRONTEND_URL}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - GOOGLE_CLIENT_ID_BACKEND=${GOOGLE_CLIENT_ID_BACKEND}
    command: npm run dev
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_dev_service
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
      - NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${NEXT_PUBLIC_RECAPTCHA_SITE_KEY}
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${NEXT_PUBLIC_GOOGLE_CLIENT_ID}
    command: npm run dev
    stdin_open: true
    tty: true
    restart: unless-stopped
    depends_on:
      - backend

volumes:
  mysql_data:
    driver: local
